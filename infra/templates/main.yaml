AWSTemplateFormatVersion: '2010-09-09'
Description: 'Pipeline de Datos Serverless - Stack Principal - AWS Academy'

Parameters:
  LabRoleArn:
    Type: String
    Description: ARN del rol LabRole preasignado
    
  S3BucketRaw:
    Type: String
    Description: Nombre del bucket S3 para archivos raw
    
  S3BucketCurated:
    Type: String
    Description: Nombre del bucket S3 para archivos curated
    
  DDBTableName:
    Type: String
    Description: Nombre de la tabla DynamoDB
    Default: datasets-catalog
    
  LambdaMemorySize:
    Type: Number
    Description: Tamaño de memoria para funciones Lambda (MB)
    Default: 1024
    MinValue: 128
    MaxValue: 3008
    
  LambdaTimeout:
    Type: Number
    Description: Timeout para funciones Lambda (segundos)
    Default: 300
    MinValue: 3
    MaxValue: 900

Resources:
  # Network Stack
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://data-pipeline-templates-899325643341.s3.us-east-1.amazonaws.com/templates/network.yaml
      Parameters: {}
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Network
        - Key: Project
          Value: data-pipeline

  # Storage Stack
  StorageStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: NetworkStack
    Properties:
      TemplateURL: https://data-pipeline-templates-899325643341.s3.us-east-1.amazonaws.com/templates/storage.yaml
      Parameters:
        S3BucketRaw: !Ref S3BucketRaw
        S3BucketCurated: !Ref S3BucketCurated
        DDBTableName: !Ref DDBTableName
        LabRoleArn: !Ref LabRoleArn
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Storage
        - Key: Project
          Value: data-pipeline

  # Lambda Stack
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - NetworkStack
      - StorageStack
    Properties:
      TemplateURL: https://data-pipeline-templates-899325643341.s3.us-east-1.amazonaws.com/templates/lambda.yaml
      Parameters:
        LabRoleArn: !Ref LabRoleArn
        LambdaMemorySize: !Ref LambdaMemorySize
        LambdaTimeout: !Ref LambdaTimeout
        VPCId: !GetAtt NetworkStack.Outputs.VPCId
        PrivateSubnetId: !GetAtt NetworkStack.Outputs.PrivateSubnetId
        LambdaSecurityGroupId: !GetAtt NetworkStack.Outputs.LambdaSecurityGroupId
        S3BucketRawName: !GetAtt StorageStack.Outputs.S3BucketRawName
        S3BucketCuratedName: !GetAtt StorageStack.Outputs.S3BucketCuratedName
        DynamoDBTableName: !GetAtt StorageStack.Outputs.DynamoDBTableName
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Lambda
        - Key: Project
          Value: data-pipeline

  # Web Application Stack
  WebAppStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - NetworkStack
      - StorageStack
    Properties:
      TemplateURL: https://data-pipeline-templates-899325643341.s3.us-east-1.amazonaws.com/templates/webapp.yaml
      Parameters:
        LabRoleArn: !Ref LabRoleArn
        VPCId: !GetAtt NetworkStack.Outputs.VPCId
        PublicSubnetId: !GetAtt NetworkStack.Outputs.PublicSubnetId
        PublicSubnet2Id: !GetAtt NetworkStack.Outputs.PublicSubnet2Id
        PrivateSubnetId: !GetAtt NetworkStack.Outputs.PrivateSubnetId
        InstanceType: t3.micro
        MinSize: 1
        MaxSize: 3
        DesiredCapacity: 2
        S3BucketRaw: !GetAtt StorageStack.Outputs.S3BucketRawName
        S3BucketCurated: !GetAtt StorageStack.Outputs.S3BucketCuratedName
        DDBTableName: !GetAtt StorageStack.Outputs.DynamoDBTableName
        LambdaQueryFunctionName: !GetAtt LambdaStack.Outputs.LambdaQueryFunctionName
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-WebApp
        - Key: Project
          Value: data-pipeline

Outputs:
  # Network Outputs
  VPCId:
    Description: ID de la VPC creada
    Value: !GetAtt NetworkStack.Outputs.VPCId
    Export:
      Name: !Sub ${AWS::StackName}-VPC-ID

  PublicSubnetId:
    Description: ID de la subred pública
    Value: !GetAtt NetworkStack.Outputs.PublicSubnetId
    Export:
      Name: !Sub ${AWS::StackName}-Public-Subnet-ID

  PublicSubnet2Id:
    Description: ID de la segunda subred pública
    Value: !GetAtt NetworkStack.Outputs.PublicSubnet2Id
    Export:
      Name: !Sub ${AWS::StackName}-Public-Subnet-2-ID

  PrivateSubnetId:
    Description: ID de la subred privada
    Value: !GetAtt NetworkStack.Outputs.PrivateSubnetId
    Export:
      Name: !Sub ${AWS::StackName}-Private-Subnet-ID

  LambdaSecurityGroupId:
    Description: ID del Security Group para Lambda
    Value: !GetAtt NetworkStack.Outputs.LambdaSecurityGroupId
    Export:
      Name: !Sub ${AWS::StackName}-Lambda-SG-ID

  # Storage Outputs
  S3BucketRawName:
    Description: Nombre del bucket S3 para archivos raw
    Value: !GetAtt StorageStack.Outputs.S3BucketRawName
    Export:
      Name: !Sub ${AWS::StackName}-S3-Raw-Bucket

  S3BucketCuratedName:
    Description: Nombre del bucket S3 para archivos curated
    Value: !GetAtt StorageStack.Outputs.S3BucketCuratedName
    Export:
      Name: !Sub ${AWS::StackName}-S3-Curated-Bucket

  DynamoDBTableName:
    Description: Nombre de la tabla DynamoDB
    Value: !GetAtt StorageStack.Outputs.DynamoDBTableName
    Export:
      Name: !Sub ${AWS::StackName}-DDB-Table

  DynamoDBTableArn:
    Description: ARN de la tabla DynamoDB
    Value: !GetAtt StorageStack.Outputs.DynamoDBTableArn
    Export:
      Name: !Sub ${AWS::StackName}-DDB-Table-ARN

  # Lambda Outputs
  LambdaQueryURL:
    Description: URL pública de la función Lambda Query
    Value: !GetAtt LambdaStack.Outputs.LambdaQueryURL
    Export:
      Name: !Sub ${AWS::StackName}-Query-URL

  LambdaETLFunctionName:
    Description: Nombre de la función Lambda ETL
    Value: !GetAtt LambdaStack.Outputs.LambdaETLFunctionName
    Export:
      Name: !Sub ${AWS::StackName}-ETL-Function

  LambdaQueryFunctionName:
    Description: Nombre de la función Lambda Query
    Value: !GetAtt LambdaStack.Outputs.LambdaQueryFunctionName
    Export:
      Name: !Sub ${AWS::StackName}-Query-Function

  LambdaETLFunctionArn:
    Description: ARN de la función Lambda ETL
    Value: !GetAtt LambdaStack.Outputs.LambdaETLFunctionArn
    Export:
      Name: !Sub ${AWS::StackName}-ETL-Function-ARN

  LambdaQueryFunctionArn:
    Description: ARN de la función Lambda Query
    Value: !GetAtt LambdaStack.Outputs.LambdaQueryFunctionArn
    Export:
      Name: !Sub ${AWS::StackName}-Query-Function-ARN

  # Web Application Outputs
  WebAppURL:
    Description: URL de la aplicación web
    Value: !GetAtt WebAppStack.Outputs.WebAppURL

  APIURL:
    Description: URL de la API
    Value: !GetAtt WebAppStack.Outputs.APIURL

  ApplicationLoadBalancerDNS:
    Description: DNS name del Application Load Balancer
    Value: !GetAtt WebAppStack.Outputs.ApplicationLoadBalancerDNS

  AutoScalingGroupName:
    Description: Nombre del Auto Scaling Group
    Value: !GetAtt WebAppStack.Outputs.AutoScalingGroupName

  # Stack Information
  StackInfo:
    Description: Información del stack desplegado
    Value: !Sub |
      Stack: ${AWS::StackName}
      Region: ${AWS::Region}
      Account: ${AWS::AccountId}
      Network Stack: ${NetworkStack}
      Storage Stack: ${StorageStack}
      Lambda Stack: ${LambdaStack}
      WebApp Stack: ${WebAppStack}
    Export:
      Name: !Sub ${AWS::StackName}-Info 
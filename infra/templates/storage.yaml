AWSTemplateFormatVersion: '2010-09-09'
Description: 'Recursos de Almacenamiento para Pipeline de Datos Serverless - AWS Academy'

Parameters:
  S3BucketRaw:
    Type: String
    Description: Nombre del bucket S3 para archivos raw
    
  S3BucketLogs:
    Type: String
    Description: Nombre del bucket S3 para logs de la aplicaci√≥n
    
  DDBTableName:
    Type: String
    Description: Nombre de la tabla DynamoDB
    
  LabRoleArn:
    Type: String
    Description: ARN del rol LabRole preasignado

Resources:
  # S3 Bucket Raw
  S3BucketRawResource:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketRaw
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
          - Id: DeleteIncompleteMultipartUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Raw-Bucket
        - Key: Project
          Value: data-pipeline
        - Key: Purpose
          Value: raw-data-storage

  # S3 Bucket Logs
  S3BucketLogsResource:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketLogs
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 90
          - Id: DeleteIncompleteMultipartUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Logs-Bucket
        - Key: Project
          Value: data-pipeline
        - Key: Purpose
          Value: application-logs

  # DynamoDB Table
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DDBTableName
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: fileId
          AttributeType: S
        - AttributeName: tableName
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      KeySchema:
        - AttributeName: fileId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: TableNameIndex
          KeySchema:
            - AttributeName: tableName
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: StatusIndex
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Datasets-Table
        - Key: Project
          Value: data-pipeline

  # S3 Bucket Policy for Raw Bucket
  S3BucketRawPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketRawResource
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowLabRoleFullAccess
            Effect: Allow
            Principal:
              AWS: !Ref LabRoleArn
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - s3:ListBucketVersions
            Resource:
              - !Sub arn:aws:s3:::${S3BucketRaw}
              - !Sub arn:aws:s3:::${S3BucketRaw}/*
          - Sid: AllowEC2InstanceProfile
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/LabRole"
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - s3:ListBucketVersions
            Resource:
              - !Sub arn:aws:s3:::${S3BucketRaw}
              - !Sub arn:aws:s3:::${S3BucketRaw}/*

  # S3 Bucket Policy for Logs Bucket
  S3BucketLogsPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketLogsResource
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowLabRoleFullAccess
            Effect: Allow
            Principal:
              AWS: !Ref LabRoleArn
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - s3:ListBucketVersions
            Resource:
              - !Sub arn:aws:s3:::${S3BucketLogs}
              - !Sub arn:aws:s3:::${S3BucketLogs}/*
          - Sid: AllowEC2InstanceProfile
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/LabRole"
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetObjectVersion
              - s3:ListBucketVersions
            Resource:
              - !Sub arn:aws:s3:::${S3BucketLogs}
              - !Sub arn:aws:s3:::${S3BucketLogs}/*


Outputs:
  S3BucketRawName:
    Description: Bucket S3 para archivos raw
    Value: !Ref S3BucketRawResource
    Export:
      Name: !Sub '${AWS::StackName}-S3-Raw-Bucket'

  S3BucketLogsName:
    Description: Nombre del bucket S3 para logs
    Value: !Ref S3BucketLogsResource
    Export:
      Name: !Sub ${AWS::StackName}-S3-Logs-Bucket

  DynamoDBTableName:
    Description: Nombre de la tabla DynamoDB
    Value: !Ref DynamoDBTable
    Export:
      Name: !Sub ${AWS::StackName}-DDB-Table

  DynamoDBTableArn:
    Description: ARN de la tabla DynamoDB
    Value: !GetAtt DynamoDBTable.Arn
    Export:
      Name: !Sub ${AWS::StackName}-DDB-Table-ARN 